//
//
// This holds the inital palette, icons, sprites, logos and fonts
//
#include <Adafruit_GFX.h>    // Core graphics library

//=================== Palette ========================

// 256 Color Palette - each color in 16-bit RGB565 format
const uint16_t __in_flash() BM_Palette[] = {
  0x0000,0xf800,0x07e0,0xffe0,0x001f,0xf81f,0x07ff,0xffff,0x0000,0xf800,0x07e0,0xffe0,
  0x001f,0xf81f,0x07ff,0xffff,0xffff,0xef7d,0xdefb,0xce79,0xbdf7,0xad75,0x9cf3,0x8c71,
  0x7bef,0x6b6d,0x5aeb,0x4a69,0x4228,0x31a6,0x2124,0x10a2,0x0020,0xbd31,0xb511,0xacd0,
  0xa48f,0x9c4e,0x940d,0x8bcc,0x838b,0x7b4a,0x7309,0x6ac8,0x6287,0x5a46,0x5205,0x49e4,
  0x4183,0xbbc9,0xb388,0xab68,0xa347,0x9b07,0x8ae6,0x82a6,0x7a85,0x7265,0x6a24,0x5a04,
  0x51e3,0x49a3,0x3962,0x3142,0x2901,0xff5b,0xff1a,0xfed8,0xfe97,0xfe76,0xfe34,0xfdf3,
  0xfdd2,0xfd90,0xf54f,0xed0e,0xe4cd,0xdc8c,0xd44b,0xcc0a,0xcbe9,0xff7b,0xfef7,0xfe52,
  0xfdce,0xfd4a,0xfca6,0xfc23,0xfba0,0xf360,0xe320,0xdae0,0xcaa0,0xba60,0xb220,0xa1e0,
  0x91a0,0xfffd,0xfff9,0xfff5,0xfff1,0xffed,0xffe9,0xffe5,0xffe1,0xffe0,0xce60,0xad60,
  0x8c60,0x6b60,0x4a60,0x2960,0x0860,0xffee,0xeeca,0xd5c8,0xc4c5,0xabc3,0x9ac2,0x8200,
  0x7140,0xfefb,0xfdf7,0xfcf3,0xfbef,0xfaeb,0xf9e7,0xf8e3,0xf800,0xe800,0xd800,0xc800,
  0xb800,0xa800,0x9800,0x8800,0x7800,0x6800,0x5800,0x4800,0x3800,0x2800,0x1800,0x0800,
  0xfdb6,0xf514,0xe471,0xdbcf,0xcb4d,0xbacb,0xb269,0xa1e7,0x8960,0x8120,0x7900,0x70c0,
  0x6880,0x6040,0x5820,0x5000,0x77e9,0x7789,0x6f08,0x6688,0x5e07,0x5586,0x4d06,0x4485,
  0x3c05,0x3384,0x2b03,0x2283,0x1a02,0x1181,0x0901,0x0060,0xdff5,0xc732,0xae50,0x956d,
  0x7c8b,0x63a8,0x4ac6,0x31e3,0x07e0,0x06e0,0x05e0,0x04e0,0x03e0,0x02e0,0x01e0,0x00e0,
  0xfb7f,0xf81f,0xd81b,0xb817,0x9813,0x780f,0x580b,0x3807,0xef5e,0xc63c,0x9cf9,0x73b7,
  0x52b4,0x4210,0x296b,0x18c6,0xd79f,0xbf5f,0xaf1f,0x96ff,0x86bf,0x6e7f,0x565f,0x3dff,
  0x34fb,0x2c77,0x23b3,0x1aef,0x05f7,0x03ef,0x02eb,0x01e7,0xe73f,0xc63f,0xad7f,0x8c7f,
  0x739f,0x529f,0x319f,0x18df,0x001f,0x001c,0x0019,0x0016,0x0013,0x0010,0x000d,0x000a,
  0x0009,0x0007,0x0006,0x0004,0x0003,0x0001,0x0000,0x07ff,0xcbf9,0xb376,0x9af3,0x8270,
  0x69ed,0x516a,0x38e7,0x2064
};


//=================== Icons ==========================

// Icons for Status GUI
const uint8_t BM_Disk[] = {
  0x7c, 0xbe, 0xbd, 0x81, 0x81, 0xbd, 0xa5, 0x7e
};
const uint8_t BM_Keyboard[] = {
  0x00, 0xab, 0x00, 0xd5, 0x01, 0xab, 0x00, 0xeb
};
const uint8_t BM_Mouse[] = {
  0x04, 0x3e, 0x49, 0x7f, 0x41, 0x41, 0x22, 0x1c
};
const uint8_t BM_Joystick[] = {
  0x00, 0x08, 0x14, 0x14, 0x08, 0x08, 0x3e, 0x7f
};
const uint8_t BM_Wifi[] = {
  0x00, 0x78, 0x04, 0x72, 0x09, 0x65, 0x15, 0x55
};


//================== Sprites =========================

// The sprites are max. 24x24 pixels, and are stored one byte per pixel
// representing the color index from the 256 color palette and a one
// bit per pixel mask:  -> 648 bytes data+mask * 48 sprites total -> 32kB
// 8-bit image with a 1-bit mask (set bits = opaque, unset bits = clear) 

// Sprite 16x16
const uint8_t __in_flash() BM_Logo[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xda, 0xda, 0xda, 0xda, 0xda, 0x00, 0x00, 0xda, 0xda, 0xda, 0xda, 0xda, 0x00, 0x00,
  0x00, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0x00,
  0xdc, 0xdc, 0xdc, 0x00, 0xdc, 0x00, 0xdc, 0xdc, 0xdc, 0xdc, 0x00, 0xdc, 0x00, 0xdc, 0xdc, 0xdc,
  0xde, 0xde, 0x00, 0x00, 0x00, 0x00, 0x00, 0xde, 0xde, 0x00, 0x00, 0x00, 0x00, 0x00, 0xde, 0xde,
  0xdf, 0xdf, 0xdf, 0x00, 0x00, 0x00, 0xdf, 0xdf, 0xdf, 0xdf, 0x00, 0x00, 0x00, 0xdf, 0xdf, 0xdf,
  0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde,
  0xdd, 0xdd, 0xdd, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd,
  0xd0, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xd0,
  0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0,
  0x00, 0xda, 0xda, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xda, 0xda, 0x00,
  0x00, 0x00, 0xd9, 0xd9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd9, 0xd9, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xd8, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xd8, 0x00, 0x00, 0x00,   
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   
};

const uint8_t __in_flash() BM_Logo_mask[] = {
  0b00000000, 0b00000000,
  0b00010000, 0b00001000,
  0b00001000, 0b00010000,
  0b00111110, 0b01111100,
  0b01111111, 0b11111110,
  0b11111111, 0b11111111,
  0b11111111, 0b11111111,
  0b11111111, 0b11111111,
  0b11111111, 0b11111111,
  0b11111111, 0b11111111,
  0b11111111, 0b11111111,
  0b11111111, 0b11111111,
  0b01110011, 0b11001110,
  0b00110000, 0b00001100,
  0b00011000, 0b00011000,
  0b00000000, 0b00000000
};

//==================== Fonts =========================

// FONT  starts at SPACE ( 0x20 | 32 )
static uint8_t BM_font8x8[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Index ' ' 0x20 
  0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x00, // Index '!' 0x21 
  0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, // Index '"' 0x22 
  0x66, 0x66, 0xFF, 0x66, 0xFF, 0x66, 0x66, 0x00, // Index '#' 0x23 
  0x18, 0x3E, 0x60, 0x3C, 0x06, 0x7C, 0x18, 0x00, // Index '$' 0x24 
  0x62, 0x66, 0x0C, 0x18, 0x30, 0x66, 0x46, 0x00, // Index '%' 0x25 
  0x3C, 0x66, 0x3C, 0x38, 0x67, 0x66, 0x3F, 0x00, // Index '&' 0x26 
  0x0c, 0x0C, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, // Index ''' 0x27 
  0x0C, 0x18, 0x30, 0x30, 0x30, 0x18, 0x0C, 0x00, // Index '(' 0x28 
  0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x18, 0x30, 0x00, // Index ')' 0x29 
  0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00, // Index '*' 0x2A 
  0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00, // Index '+' 0x2B 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, // Index ',' 0x2C 
  0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, // Index '-' 0x2D 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, // Index '.' 0x2E 
  0x00, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x00, // Index '/' 0x2F 
  0x3C, 0x66, 0x6E, 0x76, 0x66, 0x66, 0x3C, 0x00, // Index '0' 0x30 
  0x18, 0x18, 0x38, 0x18, 0x18, 0x18, 0x7E, 0x00, // Index '1' 0x31 
  0x3C, 0x66, 0x06, 0x0C, 0x30, 0x60, 0x7E, 0x00, // Index '2' 0x32 
  0x3C, 0x66, 0x06, 0x1C, 0x06, 0x66, 0x3C, 0x00, // Index '3' 0x33 
  0x06, 0x0E, 0x1E, 0x66, 0x7F, 0x06, 0x06, 0x00, // Index '4' 0x34 
  0x7E, 0x60, 0x7C, 0x06, 0x06, 0x66, 0x3C, 0x00, // Index '5' 0x35 
  0x3C, 0x66, 0x60, 0x7C, 0x66, 0x66, 0x3C, 0x00, // Index '6' 0x36 
  0x7E, 0x66, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x00, // Index '7' 0x37 
  0x3C, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x3C, 0x00, // Index '8' 0x38 
  0x3C, 0x66, 0x66, 0x3E, 0x06, 0x66, 0x3C, 0x00, // Index '9' 0x39 
  0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, // Index ':' 0x3A 
  0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x18, 0x30, // Index ';' 0x3B 
  0x0E, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0E, 0x00, // Index '<' 0x3C 
  0x00, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00, 0x00, // Index '=' 0x3D 
  0x70, 0x18, 0x0C, 0x06, 0x0C, 0x18, 0x70, 0x00, // Index '>' 0x3E 
  0x3C, 0x66, 0x06, 0x0C, 0x18, 0x00, 0x18, 0x00, // Index '?' 0x3F 
  0x3C, 0x66, 0x6E, 0x6E, 0x60, 0x62, 0x3C, 0x00, // Index '@' 0x40 
  0x18, 0x3C, 0x66, 0x7E, 0x66, 0x66, 0x66, 0x00, // Index 'A' 0x41 
  0x7C, 0x66, 0x66, 0x7C, 0x66, 0x66, 0x7C, 0x00, // Index 'B' 0x42 
  0x3C, 0x66, 0x60, 0x60, 0x60, 0x66, 0x3C, 0x00, // Index 'C' 0x43 
  0x78, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0x78, 0x00, // Index 'D' 0x44 
  0x7E, 0x60, 0x60, 0x78, 0x60, 0x60, 0x7E, 0x00, // Index 'E' 0x45 
  0x7E, 0x60, 0x60, 0x78, 0x60, 0x60, 0x60, 0x00, // Index 'F' 0x46 
  0x3C, 0x66, 0x60, 0x6E, 0x66, 0x66, 0x3C, 0x00, // Index 'G' 0x47 
  0x66, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x66, 0x00, // Index 'H' 0x48 
  0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, // Index 'I' 0x49 
  0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x6C, 0x38, 0x00, // Index 'J' 0x4A 
  0x66, 0x6C, 0x78, 0x70, 0x78, 0x6C, 0x66, 0x00, // Index 'K' 0x4B 
  0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7E, 0x00, // Index 'L' 0x4C 
  0x63, 0x77, 0x7F, 0x6B, 0x63, 0x63, 0x63, 0x00, // Index 'M' 0x4D 
  0x66, 0x76, 0x7E, 0x7E, 0x6E, 0x66, 0x66, 0x00, // Index 'N' 0x4E 
  0x3C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00, // Index 'O' 0x4F 
  0x7C, 0x66, 0x66, 0x7C, 0x60, 0x60, 0x60, 0x00, // Index 'P' 0x50 
  0x3C, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x0E, 0x00, // Index 'Q' 0x51 
  0x7C, 0x66, 0x66, 0x7C, 0x78, 0x6C, 0x66, 0x00, // Index 'R' 0x52 
  0x3C, 0x66, 0x60, 0x3C, 0x06, 0x66, 0x3C, 0x00, // Index 'S' 0x53 
  0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, // Index 'T' 0x54 
  0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00, // Index 'U' 0x55 
  0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x00, // Index 'V' 0x56 
  0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00, // Index 'W' 0x57 
  0x66, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0x66, 0x00, // Index 'X' 0x58 
  0x66, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x18, 0x00, // Index 'Y' 0x59 
  0x7E, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x7E, 0x00, // Index 'Z' 0x5A 
  0x3C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x00, // Index '[' 0x5B 
  0x00, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x03, 0x00, // Index '\' 0x5C
  0x3C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3C, 0x00, // Index ']' 0x5D 
  0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00, // Index '^' 0x5E 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, // Index '_' 0x5F 
  0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Index '`' 0x60 
  0x00, 0x00, 0x3C, 0x06, 0x3E, 0x66, 0x3E, 0x00, // Index 'a' 0x61 
  0x00, 0x60, 0x60, 0x7C, 0x66, 0x66, 0x7C, 0x00, // Index 'b' 0x62 
  0x00, 0x00, 0x3C, 0x60, 0x60, 0x60, 0x3C, 0x00, // Index 'c' 0x63 
  0x00, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3E, 0x00, // Index 'd' 0x64 
  0x00, 0x00, 0x3C, 0x66, 0x7E, 0x60, 0x3C, 0x00, // Index 'e' 0x65 
  0x00, 0x0E, 0x18, 0x3E, 0x18, 0x18, 0x18, 0x00, // Index 'f' 0x66 
  0x00, 0x00, 0x3E, 0x66, 0x66, 0x3E, 0x06, 0x7C, // Index 'g' 0x67 
  0x00, 0x60, 0x60, 0x7C, 0x66, 0x66, 0x66, 0x00, // Index 'h' 0x68 
  0x00, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3C, 0x00, // Index 'i' 0x69 
  0x00, 0x06, 0x00, 0x06, 0x06, 0x06, 0x06, 0x3C, // Index 'j' 0x6A 
  0x00, 0x60, 0x60, 0x6C, 0x78, 0x6C, 0x66, 0x00, // Index 'k' 0x6B 
  0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, // Index 'l' 0x6C 
  0x00, 0x00, 0x66, 0x7F, 0x7F, 0x6B, 0x63, 0x00, // Index 'm' 0x6D 
  0x00, 0x00, 0x7C, 0x66, 0x66, 0x66, 0x66, 0x00, // Index 'n' 0x6E 
  0x00, 0x00, 0x3C, 0x66, 0x66, 0x66, 0x3C, 0x00, // Index 'o' 0x6F 
  0x00, 0x00, 0x7C, 0x66, 0x66, 0x7C, 0x60, 0x60, // Index 'p' 0x70 
  0x00, 0x00, 0x3E, 0x66, 0x66, 0x3E, 0x06, 0x06, // Index 'q' 0x71 
  0x00, 0x00, 0x7C, 0x66, 0x60, 0x60, 0x60, 0x00, // Index 'r' 0x72 
  0x00, 0x00, 0x3E, 0x60, 0x3C, 0x06, 0x7C, 0x00, // Index 's' 0x73 
  0x00, 0x18, 0x7E, 0x18, 0x18, 0x18, 0x0E, 0x00, // Index 't' 0x74 
  0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3E, 0x00, // Index 'u' 0x75 
  0x00, 0x00, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x00, // Index 'v' 0x76 
  0x00, 0x00, 0x63, 0x6B, 0x7F, 0x3E, 0x36, 0x00, // Index 'w' 0x77 
  0x00, 0x00, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0x00, // Index 'x' 0x78 
  0x00, 0x00, 0x66, 0x66, 0x66, 0x3E, 0x0C, 0x78, // Index 'y' 0x79 
  0x00, 0x00, 0x7E, 0x0C, 0x18, 0x30, 0x7E, 0x00, // Index 'z' 0x7A 
  0x0c, 0x18, 0x18, 0x38, 0x18, 0x18, 0x0c, 0x00, // Index '{' 0x7B 
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, // Index '|' 0x7C 
  0x30, 0x18, 0x18, 0x1c, 0x18, 0x18, 0x30, 0x00, // Index '}' 0x7D 
  0x00, 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, // Index '~' 0x7E 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Index '' 0x7F 
// Extended ASCII & PETSCII like stuff
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
  0x08, 0x1C, 0x3E, 0x7F, 0x7F, 0x1C, 0x3E, 0x00, 
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 
  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 
  0x00, 0x00, 0x00, 0xE0, 0xF0, 0x38, 0x18, 0x18, 
  0x18, 0x18, 0x1C, 0x0F, 0x07, 0x00, 0x00, 0x00, 
  0x18, 0x18, 0x38, 0xF0, 0xE0, 0x00, 0x00, 0x00, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 
  0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 
  0x03, 0x07, 0x0E, 0x1C, 0x38, 0x70, 0xE0, 0xC0, 
  0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x00, 0x3C, 0x7E, 0x7E, 0x7E, 0x7E, 0x3C, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 
  0x36, 0x7F, 0x7F, 0x7F, 0x3E, 0x1C, 0x08, 0x00, 
  0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 
  0x00, 0x00, 0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18,
  0xC3, 0xE7, 0x7E, 0x3C, 0x3C, 0x7E, 0xE7, 0xC3,
  0x00, 0x3C, 0x7E, 0x66, 0x66, 0x7E, 0x3C, 0x00,
  0x18, 0x18, 0x66, 0x66, 0x18, 0x18, 0x3C, 0x00,
  0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
  0x08, 0x1C, 0x3E, 0x7F, 0x3E, 0x1C, 0x08, 0x00,
  0x18, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18,
  0xC0, 0xC0, 0x30, 0x30, 0xC0, 0xC0, 0x30, 0x30,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x00, 0x00, 0x03, 0x3E, 0x76, 0x36, 0x36, 0x00,
  0xFF, 0x7F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xCC, 0xCC, 0x33, 0x33, 0xCC, 0xCC, 0x33, 0x33,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x00, 0x00, 0x00, 0x00, 0xCC, 0xCC, 0x33, 0x33,
  0xFF, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0x80,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x18, 0x18, 0x18, 0x1F, 0x1F, 0x18, 0x18, 0x18,
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F,
  0x18, 0x18, 0x18, 0x1F, 0x1F, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xF8, 0xF8, 0x18, 0x18, 0x18,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x1F, 0x1F, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0xFF, 0xFF, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0xF8, 0xF8, 0x18, 0x18, 0x18,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0,
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0,
  0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00,
  0x18, 0x18, 0x18, 0xF8, 0xF8, 0x00, 0x00, 0x00,
  0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00,
  0xF0, 0xF0, 0xF0, 0xF0, 0x0F, 0x0F, 0x0F, 0x0F,
  0xA0, 0x50, 0xA0, 0x50, 0xA0, 0x50, 0xA0, 0x50,
  0x0A, 0x05, 0x0A, 0x05, 0x0A, 0x05, 0x0A, 0x05, 
  0xAA, 0x55, 0xAA, 0x55, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xAA, 0x55, 0xAA, 0x55, 
  0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 
  0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 
  0x55, 0xAA, 0x54, 0xA8, 0x50, 0xA0, 0x40, 0x80, 
  0xAA, 0x55, 0x2A, 0x15, 0x0A, 0x05, 0x02, 0x01, 
  0x01, 0x02, 0x05, 0x0A, 0x15, 0x2A, 0x55, 0xAA,
  0x80, 0x40, 0xA0, 0x50, 0xA8, 0x54, 0xAA, 0x55,
  0xFF, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0x80,
  0xFF, 0x7F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x01,
  0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x7F, 0xFF,
  0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF,
  0xFF, 0xC3, 0xA5, 0x99, 0x99, 0xA5, 0xC3, 0xFF,
  0xFF, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xFF,
  0xFF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF,
  0xFF, 0x80, 0xB0, 0xB0, 0xB0, 0xB0, 0x80, 0xFF,
  0xFF, 0x80, 0xBC, 0xBC, 0xBC, 0xBC, 0x80, 0xFF,
  0xFF, 0x80, 0xBF, 0xBF, 0xBF, 0xBF, 0x80, 0xFF,
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
  0xFF, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0xFF,
  0xFF, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0xFF,
  0xFF, 0x00, 0xFC, 0xFC, 0xFC, 0xFC, 0x00, 0xFF,
  0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF,
  0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFF,
  0xFF, 0x01, 0xC1, 0xC1, 0xC1, 0xC1, 0x01, 0xFF,
  0xFF, 0x01, 0xF1, 0xF1, 0xF1, 0xF1, 0x01, 0xFF,
  0xFF, 0x01, 0xFD, 0xFD, 0xFD, 0xFD, 0x01, 0xFF,
  0xC3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xC3, 0xFF,
  0xFF, 0x83, 0x85, 0x89, 0x91, 0xA1, 0xC1, 0xFF,
  0xFF, 0xC1, 0xA1, 0x91, 0x89, 0x85, 0x83, 0xFF,
  0x00, 0x18, 0x5A, 0x5A, 0x18, 0x5A, 0x5A, 0x00,
  0x00, 0x14, 0x2E, 0x5C, 0xBA, 0x74, 0x28, 0x10,
  0x00, 0x6C, 0x00, 0x7E, 0x7E, 0x00, 0x6C, 0x00,
  0x10, 0x28, 0x74, 0xBA, 0x5C, 0x2E, 0x14, 0x00,
  0x00, 0x5A, 0x5A, 0x18, 0x5A, 0x5A, 0x18, 0x00,
  0x08, 0x14, 0x2E, 0x5D, 0x3A, 0x74, 0x28, 0x00,
  0x00, 0x36, 0x00, 0x7E, 0x7E, 0x00, 0x36, 0x00,
  0x00, 0x28, 0x74, 0x3A, 0x5D, 0x2E, 0x14, 0x08,
  0xFF, 0x11, 0xFF, 0x88, 0xFF, 0x11, 0xFF, 0x88,
  0xFF, 0x11, 0xFF, 0x22, 0xFF, 0x11, 0xFF, 0xAA,
  0xF9, 0x00, 0xCF, 0x00, 0x37, 0x00, 0xDE, 0x00,
  0x00, 0x00, 0x00, 0x10, 0x11, 0x15, 0x55, 0x55,
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3C, 0x24, 0x3C, 0x24, 0x3C, 0x24, 0x3C, 0x24,
  0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C,
  0x38, 0x7C, 0xFE, 0xFE, 0xFE, 0x7C, 0x38, 0x00,
  0x38, 0x7C, 0xFE, 0xE0, 0xFE, 0x7C, 0x38, 0x00,
  0x38, 0x7C, 0xF0, 0xE0, 0xF0, 0x7C, 0x38, 0x00,
  0x38, 0x7C, 0x92, 0xB6, 0xFE, 0xFE, 0xAA, 0x00,
  0x38, 0x7C, 0x92, 0xFE, 0xC6, 0xFE, 0xAA, 0x00,
  0x00, 0x42, 0x24, 0x00, 0x00, 0x24, 0x42, 0x00,
  0x00, 0x00, 0x24, 0x00, 0x00, 0x24, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00,
  0x7E, 0xFF, 0x99, 0xFF, 0xC3, 0xBD, 0xFF, 0x7E,
  0x7E, 0xFF, 0x99, 0xFF, 0xFF, 0x81, 0xFF, 0x7E,
  0x7E, 0xFF, 0x99, 0xFF, 0xBD, 0xC3, 0xFF, 0x7E,
  0x14, 0x08, 0x14, 0x10, 0x38, 0x7C, 0x7C, 0x38,
  0x40, 0x0E, 0x18, 0x24, 0x22, 0x4A, 0x5A, 0x3C,
  0xFF, 0xC3, 0x99, 0x18, 0x18, 0x99, 0xC3, 0xFF,
  0x00, 0x22, 0x77, 0x1C, 0x08, 0x00, 0x00, 0x00,
  0x18, 0x18, 0x3C, 0xBD, 0xA5, 0xE7, 0xFF, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10,
  0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00,
  0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x5A, 0x7E, 0xDB, 0xFF, 0xFF, 0xA5, 0x00,
  0x3C, 0x7E, 0x99, 0xFF, 0x18, 0x5A, 0xA5, 0x18,
  0x3C, 0x7E, 0xFF, 0x99, 0x7E, 0x3C, 0x5A, 0xA5,
  0x24, 0x24, 0x3C, 0x18, 0x18, 0x3C, 0x3C, 0x18,
  0x99, 0x5A, 0x00, 0xC3, 0xC3, 0x00, 0x5A, 0x99,
  0x18, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x18, 0x42, 0x3C, 0x81, 0x7E, 0x00, 0x00, 0x00,
  0x18, 0x42, 0x3C, 0x81, 0x7E, 0x00, 0xFF, 0x00,
  0x07, 0x1F, 0x32, 0x7F, 0xFF, 0x39, 0x10, 0x00,
  0xE0, 0xF8, 0x4C, 0xFE, 0xFF, 0x9C, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x24,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x5A, 0x3C, 0x24,
  0x00, 0x00, 0x3C, 0x42, 0x7E, 0x5A, 0x42, 0x7E,
  0x00, 0x00, 0x3C, 0x18, 0x18, 0x24, 0x42, 0x7E,
  0x18, 0x18, 0x7C, 0xBB, 0x30, 0x38, 0xEC, 0x0C,
  0x18, 0x18, 0x3E, 0xDD, 0x0C, 0x1C, 0x37, 0x30,
};
